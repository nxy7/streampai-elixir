# The directory Mix will write compiled artifacts to.
/_build/

# Ignore generated release artifacts, but keep custom overlays
/_build/*/rel/

# If you run "mix test --cover", coverage assets end up here.
/cover/

# The directory Mix downloads your dependencies sources to.
/deps/

# Where 3rd-party dependencies like ExDoc output generated docs.
/doc/

# Ignore .fetch files in case you like to edit your project deps locally.
/.fetch

# If the VM crashes, it generates a dump, let's ignore it too.
erl_crash.dump

# Also ignore archive artifacts (built via "mix archive.build").
*.ez

# Temporary files, for example, from tests.
/tmp/

# Ignore package tarball (built via "mix hex.build").
streampai-*.tar

# Ignore generated assets (build artifacts)
/priv/static/assets/

# Ignore digested assets cache and manifest files
/priv/static/cache_manifest.json


# In case you use Node.js/npm, you want to ignore these.
npm-debug.log
/assets/node_modules/


# Ignore automatically generated Svelte files by the ~V sigil
/assets/svelte/_build/

# Ignore ssr build for svelte.
/priv/svelte/

# Vue build artifacts
/priv/vue/

# Package lockfiles - typically generated, but some teams track them
# Uncomment the next line if you don't want to track package-lock.json
# /assets/package-lock.json

# IDE and editor files
.vscode/
.idea/
*.sublime-*
.atom/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Environment files
.env
.env.local
.env.*.local

# Log files
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock
