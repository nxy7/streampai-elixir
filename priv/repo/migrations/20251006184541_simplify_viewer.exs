defmodule Streampai.Repo.Migrations.SimplifyViewer do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop constraint(:stream_viewers, "stream_viewers_viewer_id_fkey")

    alter table(:stream_viewers) do
      modify :viewer_id, :text
    end

    create index(:stream_viewers, [:viewer_id])

    drop constraint(:stream_events, "stream_events_viewer_id_fkey")

    alter table(:stream_events) do
      modify :viewer_id, :text
    end

    create index(:stream_events, [:viewer_id])

    drop constraint(:chat_messages, "chat_messages_viewer_id_fkey")

    alter table(:chat_messages) do
      modify :viewer_id, :text
    end

    create index(:chat_messages, [:viewer_id])
  end

  def down do
    drop_if_exists index(:chat_messages, [:viewer_id])

    alter table(:chat_messages) do
      modify :viewer_id,
             references(:viewers,
               column: :id,
               name: "chat_messages_viewer_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop_if_exists index(:stream_events, [:viewer_id])

    alter table(:stream_events) do
      modify :viewer_id,
             references(:viewers,
               column: :id,
               name: "stream_events_viewer_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop_if_exists index(:stream_viewers, [:viewer_id])

    alter table(:stream_viewers) do
      modify :viewer_id,
             references(:viewers,
               column: :id,
               name: "stream_viewers_viewer_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end
  end
end
